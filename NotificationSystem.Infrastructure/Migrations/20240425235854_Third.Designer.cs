// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotificationSystem.Infrastructure.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NotificationSystem.Infrastructure.Migrations
{
    [DbContext(typeof(NotificationSystemContext))]
    [Migration("20240425235854_Third")]
    partial class Third
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("subscriber_subscriberid_seq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("subscription_subscriptionid_seq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("voucher_voucherid_seq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("voucherproduction_voucherproductionid_seq")
                .IncrementsBy(10);

            modelBuilder.Entity("NotificationSystem.Domain.Subscription.Subscriber", b =>
                {
                    b.Property<int>("SubscriberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("SubscriberId"), "subscriber_subscriberid_seq");

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("SubscriptionType")
                        .HasColumnType("integer");

                    b.HasKey("SubscriberId");

                    b.ToTable("Subscriber");
                });

            modelBuilder.Entity("NotificationSystem.Domain.Subscription.Subscription", b =>
                {
                    b.Property<long>("SubcriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<long>("SubcriptionId"), "subscription_subscriptionid_seq");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<int>("Package")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SubscriptionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SubscriptionType")
                        .HasColumnType("integer");

                    b.HasKey("SubcriptionId");

                    b.HasIndex("SubscriberId");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("NotificationSystem.Domain.Voucher.Voucher", b =>
                {
                    b.Property<int>("VoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("VoucherId"), "voucher_voucherid_seq");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("DateProduced")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateUsed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PinNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("UsedByMobileNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VoucherProductionId")
                        .HasColumnType("integer");

                    b.HasKey("VoucherId");

                    b.HasIndex("VoucherProductionId");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("NotificationSystem.Domain.Voucher.VoucherProduction", b =>
                {
                    b.Property<int>("VoucherProductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("VoucherProductionId"), "voucherproduction_voucherproductionid_seq");

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("QuantityProduced")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("VoucherProductionId");

                    b.ToTable("VoucherProduction");
                });

            modelBuilder.Entity("NotificationSystem.Domain.Subscription.Subscriber", b =>
                {
                    b.OwnsOne("NotificationSystem.Domain.Subscription.SubscriberWallet", "Wallet", b1 =>
                        {
                            b1.Property<int>("SubscriberId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("AvailableBalance")
                                .HasColumnType("numeric");

                            b1.Property<long>("LastTransId")
                                .HasColumnType("bigint");

                            b1.Property<DateTime>("LastTransTimeStamp")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("MobileNumber")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("SubscriberId");

                            b1.ToTable("Subscriber");

                            b1.ToJson("Wallet");

                            b1.WithOwner()
                                .HasForeignKey("SubscriberId");
                        });

                    b.Navigation("Wallet")
                        .IsRequired();
                });

            modelBuilder.Entity("NotificationSystem.Domain.Subscription.Subscription", b =>
                {
                    b.HasOne("NotificationSystem.Domain.Subscription.Subscriber", "Subcriber")
                        .WithMany("Subscriptions")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subcriber");
                });

            modelBuilder.Entity("NotificationSystem.Domain.Voucher.Voucher", b =>
                {
                    b.HasOne("NotificationSystem.Domain.Voucher.VoucherProduction", "VoucherProduction")
                        .WithMany("Vouchers")
                        .HasForeignKey("VoucherProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VoucherProduction");
                });

            modelBuilder.Entity("NotificationSystem.Domain.Subscription.Subscriber", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("NotificationSystem.Domain.Voucher.VoucherProduction", b =>
                {
                    b.Navigation("Vouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
